@using System.Web.Mvc.Html
@using Orchard.ContentManagement
@using Pipeline.Web.Orchard
@using Pipeline.Web.Orchard.Models
@model PipelineConfigurationPart

@{
    var theme = WorkContext.CurrentSite.As<PipelineSettingsPart>().EditorTheme;
    string returnUrl;
    string returnName;
    if (string.IsNullOrEmpty(Request.QueryString[Common.ReturnUrlName])) {
        returnUrl = Url.Action("List", "Cfg", new {area = Common.ModuleName});
        returnName = "Jobs";
    } else {
        returnUrl = Request.QueryString[Common.ReturnUrlName];
        returnName = "Back";
    }
    
    Html.RenderPartial("~/Modules/Pipeline.Web.Orchard/Views/Shared/ConfigurationEditor.cshtml", new Editor { TextAreaId = "PipelineConfiguration_Configuration", Theme = theme, Portion = 0.6, Library = "https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.12.0/", Mode = Model.EditorMode });
}

<div class="editor-field">
    @Html.LabelFor(x => x.EditorMode, T("Editor Mode"))
    @Html.DropDownListFor(x => x.EditorMode, PipelineConfigurationPart.EditorModes)
    @Html.ValidationMessageFor(x => x.EditorMode)

    <button style="float: right;" type="button" class="button grey" onclick="javascript: window.open('@(returnUrl)', '_self');">@returnName</button>
    @if(!Model.NeedsInputFile) {
        <button style="float: right;" type="button" class="button grey" onclick="javascript: window.open('@(Url.Action("Check", "Api", new {id = Model.Id, area = Common.ModuleName}))', '_blank');">Check</button>
    }
    <button style="float: right;" type="button" class="button grey" onclick="javascript: window.open('@(Url.Action("Cfg", "Api", new { id = Model.Id, area = Common.ModuleName }))', '_blank');">Cfg</button>
</div>

<div class="editor-field">
    @Html.LabelFor(x => x.Configuration, T("Configuration"))
    @Html.TextAreaFor(x => x.Configuration)
</div>

<div class="hint" style="font-size: smaller;">
    <strong>F11</strong>: <span>Full Screen</span>,
    <strong>Esc</strong>: <span>Exit Full Screen</span>,
    <strong>Ctrl-S</strong>: <span>Save</span>,
    <strong>Ctrl-Space</strong>: <span>Auto Complete</span>,
    <strong>Ctrl-F</strong>: <span>Find</span>,
    <strong>Ctrl-G</strong>: <span>Find next</span>,
    <strong>Shift-Ctrl-G</strong>: <span>Find previous</span>,
    <strong>Shift-Ctrl-F</strong>: <span>Replace</span>,
    <strong>Shift-Ctrl-R</strong>: <span>Replace all</span>.
</div>

<div class="editor-field">
    @Html.LabelFor(x => x.PlaceHolderStyle, T("Place Holder Style"))
    @Html.DropDownListFor(x => x.PlaceHolderStyle, PipelineConfigurationPart.PlaceHolderStyles)
    @Html.ValidationMessageFor(x => x.PlaceHolderStyle)
</div>

<div class="editor-field">
    @Html.LabelFor(x => x.MapStyle, T("Map Style (if applicable)"))
    @Html.DropDownListFor(x => x.MapStyle, PipelineConfigurationPart.MapStyles)
    @Html.ValidationMessageFor(x => x.MapStyle)
</div>

<fieldset>
    <legend>Run Options</legend>

    <div class="editor-field">
        @Html.LabelFor(x => x.Modes, T("Modes"))
        @Html.TextBoxFor(x => x.Modes)
        @Html.ValidationMessageFor(x => x.Modes)
    </div>
    <div class="hint">@T("Modes available on the pipeline's list page.  An asterisk indicates the default mode.")</div>

    <div class="editor-field">
        <table>
            <tr>
                <td style="padding-right: 10px;">@Html.EditorFor(x => x.Runnable)</td>
                <td>@Html.LabelFor(x => x.Runnable, T("Runnable"))</td>
                <td> &nbsp;</td>
                <td><div class="hint"> @T("Let the user run this.")</div></td>
                <td>@Html.ValidationMessageFor(x => x.Runnable)</td>
            </tr>
            <tr>
                <td style="padding-right: 10px;">@Html.EditorFor(x => x.NeedsInputFile)</td>
                <td>@Html.LabelFor(x => x.NeedsInputFile, T("Needs Input File"))</td>
                <td> &nbsp;</td>
                <td><div class="hint"> @T("Needs an input file to run.")</div></td>
                <td>@Html.ValidationMessageFor(x => x.NeedsInputFile)</td>
            </tr>
        </table>
    </div>
</fieldset>

<hr />

<fieldset>
    <legend>White-list by IP</legend>
    <table>
        <tr>
            <td>
                <div class="editor-field">
                    @Html.LabelFor(x => x.StartAddress, T("Start Address"))
                    @Html.EditorFor(x => x.StartAddress)
                    @Html.ValidationMessageFor(x => x.StartAddress)
                </div>
                <div class="hint">@T("Starting IP Address")</div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.LabelFor(x => x.EndAddress, T("End Address"))
                    @Html.EditorFor(x => x.EndAddress)
                    @Html.ValidationMessageFor(x => x.EndAddress)
                </div>
                <div class="hint">@T("Ending IP Address")</div>
            </td>
            <td style="width: 100%;">&nbsp;&nbsp;&nbsp;</td>
        </tr>
        <tr>
            <td colspan="3">
                <p>
                    <strong style="color: red; font-weight: bold;">CAUTION</strong>: You should only white-list internal IP addresses on configurations using trusted authentication. Trusted
                    authentication does not store the <code>user</code> and <code>password</code> in your connections. Instead, it relies on the credentials
                    of the account running your website. If you store your credentials in your connections (above), <strong color="style: red;">they are comprimised</strong>.<br/><br/>
                </p>

                <p>
                    White-listing allows access to <code>~/Pipeline/Api/Cfg</code> so that
                    other computers on your network can read the configuration (and run them, or not).<br/><br/>
                </p>

                <p>
                    You can enable <code>~/Pipeline/Api/Run</code> by tagging this configuration as <strong>SERVICE</strong> below. Note: Run removes
                    the credentials (user, password) from the connections.<br/><br/>
                </p>
                <p>
                    @T("Your IP is {0}", Request.UserHostAddress).
                </p>
            </td>
        </tr>
    </table>
</fieldset>

<input id="PipelineConfiguration_Migrated" name="PipelineConfiguration.Migrated" type="hidden" value="true">
